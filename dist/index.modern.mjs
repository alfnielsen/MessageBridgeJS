import{HubConnectionBuilder as e}from"@microsoft/signalr";import{v4 as s}from"uuid";function t(){return t=Object.assign?Object.assign.bind():function(e){for(var s=1;s<arguments.length;s++){var t=arguments[s];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},t.apply(this,arguments)}var n,r;function o(e,s=r.ToClient){return e.isError=e.type===n.Error,null!=e.direction||(e.direction=s),e}function i(e){switch(e){case n.Command:return n.CommandResponse;case n.Query:return n.QueryResponse;default:return e}}function a(e){var t,o;return{name:e.name,payload:e.payload,type:e.type,direction:null!=(t=e.direction)?t:r.ToClient,trackId:null!=(o=e.trackId)?o:s(),module:e.module,schema:e.schema,created:(new Date).toISOString(),isError:e.type===n.Error}}function c(e){return a(t({},e,{type:n.Command}))}function l(e){return a(t({},e,{type:n.Query}))}function d(e){return a(t({},e,{type:n.Event}))}!function(e){e.Command="Command",e.CommandResponse="CommandResponse",e.Query="Query",e.QueryResponse="QueryResponse",e.Event="Event",e.Error="Error"}(n||(n={})),function(e){e.ToClient="ToClient",e.ToServer="ToServer"}(r||(r={}));class u{constructor(e){var s,t;this.wsUri=void 0,this.connected=!1,this.trackedRequestMap={},this.subscribedEventListMap={},this.history=[],this.bridgeErrors=[],this.options={timeout:void 0,allowResponseValueWhenCancelled:!1,keepHistoryForReceivedMessages:!1,keepHistoryForSendingMessages:!1,logger:null!=(s=null==(t=console)?void 0:t.log)?s:()=>{},logParseIncomingMessageError:!0,timeoutFromBridgeOptionsMessage:e=>`Timeout after ${e}ms (BridgeOptions.timeout)`,timeoutFromRequestOptionsMessage:e=>`Timeout after ${e}ms (RequestOptions.timeout)`,logParseIncomingMessageErrorFormat:e=>["Bridge-Error (parse messageReceived):",e],logMessageReceived:!1,logMessageReceivedFormat:e=>["Bridge (messageReceived):",e],logSendingMessage:!1,logSendingMessageFormat:e=>["Bridge (sendingMessage):",e]},this.wsUri=e}setOptions(e){this.options=t({},this.options,e)}getTrackedRequestMessage(e){var s;return null==(s=this.trackedRequestMap[e])?void 0:s.requestMessage}cancelRequest(e){this.trackedRequestMap[e]&&(this.trackedRequestMap[e].requestMessage.cancelled=!0)}onConnect(){var e,s;this.connected=!0,null==(e=(s=this.options).onConnect)||e.call(s)}onError(e,s){var t,n;void 0!==e&&this.bridgeErrors.push(e),null==(t=(n=this.options).onError)||t.call(n,e,s)}onClose(e,s){var t,n;void 0!==e&&this.bridgeErrors.push(e),this.connected=!1,null==(t=(n=this.options).onClose)||t.call(n,e,s)}setOptionalRequestTimeout({requestMessage:e,timeout:s,onTimeout:t}){let n,r;var o,i,a;if(void 0!==s)n=null!=(o=null==(i=(a=this.options).timeoutFromRequestOptionsMessage)?void 0:i.call(a,s))?o:`timeout after ${s}`,r=s;else if(void 0!==this.options.timeout){var c,l,d;n=null!=(c=null==(l=(d=this.options).timeoutFromBridgeOptionsMessage)?void 0:l.call(d,this.options.timeout))?c:`timeout after ${this.options.timeout}`,r=this.options.timeout}if(void 0!==r)return setTimeout(()=>{e.timedOut=!0,t({reason:n,responseMessage:void 0,request:e.payload,requestMessage:e})},r)}sendMessageTracked(e){if(e.requestMessage.cancelled){let s=!0;if(void 0!==e.requestOptions.sendCancelled?s=!e.requestOptions.sendCancelled:this.options.sendCancelledRequest&&(s=!1),s)return Promise.resolve({request:e.requestMessage.payload,requestMessage:e.requestMessage,cancelled:!0})}return new Promise((s,n)=>{this.sendMessagePromiseHandler(t({},e,{handleSuccess:(e,t)=>{s(t)},handleError:(e,t)=>{this.options.throwOnTrackedError?n(t):s(t)}}))}).finally(()=>{delete this.trackedRequestMap[e.requestMessage.trackId]})}sendMessage(e){const s=void 0;if(e.requestMessage.cancelled){let t=!0;if(void 0!==e.requestOptions.sendCancelled?t=!e.requestOptions.sendCancelled:this.options.sendCancelledRequest&&(t=!1),t)return Promise.resolve(s)}return new Promise((n,r)=>{this.sendMessagePromiseHandler(t({},e,{handleSuccess:(e,t)=>{n(e?s:t.response)},handleError:(e,t,o)=>{e&&n(s),this.options.avoidThrowOnNonTrackedError?n(null==o?void 0:o.payload):r(t)}}))})}sendMessagePromiseHandler({handleError:e,handleSuccess:s,requestMessage:t,requestOptions:n}){t.direction=r.ToServer,this.options.interceptSendMessage&&(t=this.options.interceptSendMessage(t));const o=(s,r)=>{var o,a,c,l;i&&clearTimeout(i);const d={response:void 0,responseMessage:void 0,request:t.payload,requestMessage:t,isError:!0,error:r.reason,errorMessage:r.responseMessage,cancelled:t.cancelled||(null==(o=r.requestMessage)?void 0:o.cancelled)||(null==(a=r.responseMessage)?void 0:a.cancelled),timedOut:t.timedOut||(null==(c=r.requestMessage)?void 0:c.timedOut)||(null==(l=r.responseMessage)?void 0:l.timedOut)};s&&this.options.callOnErrorWhenRequestIsCancelled&&n.callOnErrorWhenRequestIsCancelled||(this.onError(d),null==n.onError||n.onError(d)),e(s,d,r)},i=this.setOptionalRequestTimeout({requestMessage:t,timeout:n.timeout,onTimeout:e=>{const s=this.handleCancelOptions(n,t);o(s,e)}});this.trackedRequestMap[t.trackId]={successTrack:e=>{const{response:r,cancelled:o}=this.handleCancelResponse(n,t,e),a={response:r,responseMessage:e,requestOptions:n,request:t.payload,requestMessage:t,isError:!1,cancelled:t.cancelled||e.cancelled,timedOut:t.timedOut||e.timedOut};var c,l;i&&clearTimeout(i),(!o||this.options.callOnSuccessWhenRequestIsCancelled||n.callOnSuccessWhenRequestIsCancelled)&&(null==(c=(l=this.options).onSuccess)||c.call(l,a),null==n.onSuccess||n.onSuccess(a)),s(o,a)},errorTrack:e=>{const{response:s,cancelled:r}=this.handleCancelResponse(n,t,e);o(r,{reason:s,responseMessage:e,request:t.payload,requestMessage:t})},requestMessage:t,requestOptions:n},this.internalSendMessage(t)}handleCancelOptions(e,s,t){let n=!1;void 0!==e.resolveCancelledForNonTracked?n=e.resolveCancelledForNonTracked:this.options.resolveCancelledNonTrackedRequest&&(n=!0);let r=!1;return(null!=t&&t.cancelled||s.cancelled)&&(r=!0),n&&r&&(r=!1),r}handleCancelResponse(e,s,t){const n=this.handleCancelOptions(e,s,t);let r=null==t?void 0:t.payload;return n&&(void 0!==e.allowResponseValueWhenCancelled?!0!==e.allowResponseValueWhenCancelled&&(r=void 0):!0!==this.options.allowResponseValueWhenCancelled&&(r=void 0)),{response:r,cancelled:n}}subscribeEvent({name:e,onEvent:s}){if(Array.isArray(e)){const t=e.map(e=>this.subscribeEvent({name:e,onEvent:s}));return()=>t.forEach(e=>e())}return this.subscribedEventListMap[e]||(this.subscribedEventListMap[e]=[]),this.subscribedEventListMap[e].push(s),()=>{const t=this.subscribedEventListMap[e].findIndex(e=>e===s);this.subscribedEventListMap[e].splice(t,1)}}createTrackedMessage(e){const s=e.requestMessage.trackId;let t={trackId:s,requestMessage:e.requestMessage,requestOptions:e.requestOptions,send:()=>this.sendMessage(e),sendTracked:()=>this.sendMessageTracked(e),cancel:()=>{null!=e&&e.requestMessage&&(e.requestMessage.cancelled=!0),this.cancelRequest(s)}};return this.options.interceptCreatedMessageOptions&&(t=this.options.interceptCreatedMessageOptions(t)),t}createCommand(e){const s=c(e);return this.createTrackedMessage({requestMessage:s,requestOptions:e})}createQuery(e){const s=l(e);return this.createTrackedMessage({requestMessage:s,requestOptions:e})}sendCommand(e){return this.createCommand(e).send()}sendCommandTracked(e){return this.createCommand(e).sendTracked()}sendQuery(e){return this.createQuery(e).send()}sendQueryTracked(e){return this.createQuery(e).sendTracked()}createEvent(e){let s=d(e);s.direction=r.ToServer;let t={trackId:s.trackId,requestMessage:s,requestOptions:e,cancel:()=>{s&&(s.cancelled=!0)},send:()=>{if(s.cancelled)if(void 0!==e.sendCancelled){if(!e.sendCancelled)return}else if(!this.options.sendCancelledRequest)return;this.options.interceptSendMessage&&(s=this.options.interceptSendMessage(s)),this.internalSendMessage(s)}};return this.options.interceptCreatedEventMessageOptions&&(t=this.options.interceptCreatedEventMessageOptions(t)),t}sendEvent(e){return this.createEvent(e).send()}onMessage(e){let s;try{s="string"==typeof e?JSON.parse(e):e}catch(e){return void this.onError(e)}try{let e=o(s);this.options.interceptReceivedMessage&&(e=this.options.interceptReceivedMessage(e)),this.handleIncomingMessage(e)}catch(e){if(this.onError(e),this.options.logger&&this.options.logParseIncomingMessageError){var t,n,r;const o=null!=(t=null==(n=(r=this.options).logParseIncomingMessageErrorFormat)?void 0:n.call(r,s))?t:[e];this.options.logger(o)}}}internalSendMessage(e){var s,t;if(this.options.keepHistoryForSendingMessages&&this.history.push(e),this.options.logger&&this.options.logSendingMessage){let s=!0;if(this.options.logSendingMessageFilter&&(s=!!e.name.match(this.options.logSendingMessageFilter)),s){var n,r,o;const s=null!=(n=null==(r=(o=this.options).logSendingMessageFormat)?void 0:r.call(o,e))?n:[e];this.options.logger(...s)}}null==(s=(t=this.options).onSend)||s.call(t,e),this.sendNetworkMessage(e)}handleIncomingMessage(e){var s,t;if(this.options.keepHistoryForReceivedMessages&&this.history.push(e),this.options.logger&&this.options.logMessageReceived){let s=!0;if(this.options.logMessageReceivedFilter&&(s=!!e.name.match(this.options.logMessageReceivedFilter)),s){var r,o,i;const s=null!=(r=null==(o=(i=this.options).logMessageReceivedFormat)?void 0:o.call(i,e))?r:[e];this.options.logger(...s)}}null==(s=(t=this.options).onMessage)||s.call(t,e);let a=e.type!==n.Error;if(e.type===n.Event)return void this.receiveEventMessage(e);const c=this.trackedRequestMap[e.trackId];var l;c&&(e.type===n.Error?(c.errorTrack(e),a=!0):c.successTrack(e),delete this.trackedRequestMap[e.trackId]),a||null==(l=this.onError)||l.call(this,e)}receiveEventMessage(e){this.subscribedEventListMap[e.name]&&this.subscribedEventListMap[e.name].forEach(s=>s(e.payload,e))}}class h extends u{constructor(...e){super(...e),this.connection=void 0}connect(s={}){if(this.connection=(new e).withUrl(this.wsUri,s).withAutomaticReconnect().build(),!this.connection)throw new Error("Failed to create SignalR connection");return this.connection.on("ReceiveMessage",e=>{this.onMessage(e)}),this.connection.onclose(e=>{this.onClose(e)}),this.connection.start().then(()=>{this.onConnect()}).catch(e=>{this.onError(e)})}close(){var e;null==(e=this.connection)||e.stop(),this.onClose()}sendNetworkMessage(e){var s;const t=JSON.stringify(e);null==(s=this.connection)||s.invoke("SendMessage",t).catch(e=>(this.onError(e),console.error(e.toString())))}}class g extends u{constructor(...e){super(...e),this.socket=void 0,this.connectedCallback=void 0}connect(){return this.socket=new WebSocket(this.wsUri),this.socket.addEventListener("message",e=>{this.onMessage(e.data)}),this.socket.addEventListener("close",e=>{this.onClose(e.reason,e)}),this.socket.addEventListener("error",e=>{this.onError(e,e)}),new Promise((e,s)=>{var t;null==(t=this.socket)||t.addEventListener("open",s=>{this.onConnect(),e()})})}close(){var e;null==(e=this.socket)||e.close(),this.onClose()}sendNetworkMessage(e){var s;const t=JSON.stringify(e);null==(s=this.socket)||s.send(t)}}class p extends u{constructor(...e){super(...e),this.server=void 0}setServer(e){this.server=e}connect(){var e;if(!this.server)throw new Error("No server set");return null==(e=this.server)||e.connect(e=>{const s=JSON.parse(JSON.stringify(e));this.onMessage(s),this.onConnect()}),Promise.resolve()}close(){this.onClose()}sendNetworkMessage(e){const s=JSON.parse(JSON.stringify(e));setTimeout(()=>{var e;null==(e=this.server)||e.onMessage(s)},10)}}class m{constructor(){this.store={},this.commands={},this.queries={},this.eventListeners={},this.sendMessage=void 0}saveToLocalStorage(e){localStorage.setItem(e,JSON.stringify(this.store))}loadFromLocalStorage(e){const s=localStorage.getItem(e);s&&(this.store=JSON.parse(s))}connect(e){this.sendMessage=e}sendError(e,s,t,o){var i;const c=a({trackId:s,type:n.Error,name:"Error",payload:e,direction:r.ToClient,cancelled:t,timedOut:o});null==(i=this.sendMessage)||i.call(this,c)}createMessage(e){return a(t({},e,{direction:r.ToClient}))}sendResponse(e){var s;const t=this.createMessage(e);null==(s=this.sendMessage)||s.call(this,t)}sendEvent(e,s){var t;const o=a({type:n.Event,name:e,payload:s,direction:r.ToClient});null==(t=this.sendMessage)||t.call(this,o)}onMessage(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(s){return this.sendError({message:`Error parsing message: ${s}`,request:e,error:s,stack:null==s?void 0:s.stack}),void console.error("Error parsing message",s)}if("Command"===e.type){if(!this.commands[e.name])return void this.sendError({message:`Command ${e.name} not found (Register it with addCommand)`,request:e},e.trackId);this.serverHandleCommand(e)}if("Query"===e.type){if(!this.queries[e.name])return void this.sendError({message:`Query ${e.name} not found (Register it with addQuery)`,request:e},e.trackId);this.serverHandleQuery(e)}if("Event"===e.type){if(!this.eventListeners[e.name])return void this.sendError({message:`Event ${e.name} not found (Register it with addEvent)`,request:e},e.trackId);this.serverHandleEvent(e)}}serverHandleCommand(e){const s=this.commands[e.name],t=e=>{var s;null==(s=this.sendMessage)||s.call(this,e)},r=s=>this.createMessage({name:e.name,type:n.CommandResponse,payload:s,trackId:e.trackId}),o=e=>{const s=r(e);t(s)},i=(s,t,n)=>{this.sendError({message:s,request:e},e.trackId,t,n)},a=(e,s)=>{this.sendEvent(e,s)};try{s({requestMessage:e,request:e.payload,store:this.store,error:i,event:a,response:o,createResponseMessage:r,sendResponseMessage:t})}catch(s){i({message:`Error in command handler for '${e.name}'`,requestMessage:e,error:s,stack:null==s?void 0:s.stack})}}serverHandleQuery(e){const s=e=>{var s;null==(s=this.sendMessage)||s.call(this,e)},t=s=>this.createMessage({name:e.name,type:n.QueryResponse,payload:s,trackId:e.trackId});(0,this.queries[e.name])({requestMessage:e,request:e.payload,store:this.store,error:(s,t,n)=>{this.sendError({message:s,request:e},e.trackId,t,n)},event:(e,s)=>{this.sendEvent(e,s)},response:e=>{const n=t(e);s(n)},createResponseMessage:t,sendResponseMessage:s})}serverHandleEvent(e){(0,this.eventListeners[e.name])({requestMessage:e,request:e.payload,store:this.store,error:s=>{this.sendError({message:s,request:e},e.trackId)},event:(e,s)=>{this.sendEvent(e,s)}})}addCommand(e,s){this.commands[e]=s}addQuery(e,s){this.queries[e]=s}addEventListener(e,s){this.eventListeners[e]=s}}export{p as ClientSideMessageBridgeService,m as InMemoryClientSideServer,i as MapResponseType,u as MessageBridgeServiceBase,r as MessageDirection,n as MessageType,h as SignalRMessageBridgeService,g as WebsocketMessageBridgeService,c as createCommandMessage,d as createEventMessage,a as createMessage,o as createMessageFromDto,l as createQueryMessage};
//# sourceMappingURL=index.modern.mjs.map
